---
title: "Module 1 - Data Maniplulation"
format: pdf
---

## Importing Data

Here we read csv files `lowbwt_Low.csv` and `lowbwt_Normal.csv`

You will need to change the working directory to your personal file location.

```{r}
# read and name data
low_birth = read.csv("./lowbwt_Low.csv")
norm_birth = read.csv("./lowbwt_Normal.csv")
```


## Examine Data Attributes

```{r}
# Variable names
names(low_birth)    

# Data dimension: rows x columns; here: 59 rows and 3 columns
dim(low_birth)

# Number of rows
nrow(low_birth)

# Number of columns
ncol(low_birth)

# Head and Tail observations
head(low_birth)
tail(low_birth)

# Check for number of missing values
sum(is.na(low_birth))

# Examine the classes of each column
str(low_birth)

# Tabulate variable smoke
table(low_birth$smoke)
```

## Data Manipulation using `dplyr`

Note: to apply these changes to the existing data, you must reassign the change.

i.e. `low_birth = filter(low_birth, age < 20)`

NOTE: you will need to install the `{tidyverse}` package.  Run `install.packages("tidyverse")` in the Console.

```{r}
# install and load tidyverse (contains dplyr)
# install.packages("tidyverse")
library(tidyverse)

# Select only column/variable age
dplyr::select(low_birth, age)

# Keep only rows where 'age' is less than 20 
filter(low_birth, age < 20)

# Select rows that contain missing data
filter(low_birth, is.na(age))

# Remove column age 
dplyr::select(low_birth, -age)

# Filter rows: select all 25+ yrs old, smokers
filter(low_birth, age > 25 & smoke == "1") 

# Ordering data by variable/column 'id'
arrange(low_birth, id)

# Arrange by id in descending order
arrange(low_birth, desc(id))

# Order by multiple columns/variables
arrange(low_birth, smoke, desc(age))

# Rename variable 'smoke' to 'Smoking_Status' 
rename(low_birth, Smoking_Status = smoke)

# Create a variable for log of 'age'
mutate(low_birth, log_age = log(age))

# Centering the data by subtracting the mean from variable 'age'
mutate(low_birth, center_age = age - mean(age))

# Use case_when function to create new age categories
# Cat 1: Age < 25; Cat 2: 25 < Age < 30. Cat 3: Age > 30
mutate(low_birth, new_age = case_when(age < 25 ~ 1,
                                      age >= 25 & age < 30 ~ 2,
                                      age > 30 ~ 3))

```

## Combine Data Sets

```{r}
# stack low_birth & norm_birth
low_and_norm = rbind(low_birth, norm_birth)

# combine by specific variable
admin_birth = read.csv("./lowbwt_Admin.csv")
birth_final = full_join(admin_birth, low_and_norm, by = "id")

# export data 
write.csv(birth_final, file = "./birth_final.csv")
```

